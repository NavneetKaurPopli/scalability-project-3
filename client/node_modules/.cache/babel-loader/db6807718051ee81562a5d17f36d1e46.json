{"ast":null,"code":"import axios from 'axios';\n\nclass Auth {\n  constructor() {\n    this.authenticated = false;\n    this.username = \"\";\n    this.password = \"\";\n  }\n\n  setPassword(password) {\n    console.log(\"Setpassword --- \" + this.password);\n    this.password = password;\n  }\n\n  async login(username, password) {\n    this.setState({\n      username: username,\n      password: password\n    });\n    axios.post(\"login\", {\n      username: this.state.username,\n      password: this.state.password\n    }).then(res => {\n      if (res.data.error) {\n        this.setState({\n          err: res.data.error\n        }, () => {\n          console.log(\"There is an error --> \" + this.state.err);\n        });\n      } else {\n        localStorage.setItem(\"token\", res.data.token);\n        console.log(res);\n      }\n    }).catch(err => {});\n    /*\n    \n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({password : this.password})\n    };\n    try {\n        const response = await fetch('http://localhost:3002/login', requestOptions)\n        const data = await response.json()\n        if (data.outcome === 'match') {\n            this.authenticated = true\n        }\n        else if (data.outcome === 'no match') {\n             this.authenticated = false\n        }\n    }\n    catch (error) {\n        return (console.log(\"Error with the authentication : \" + error))\n    }\n    */\n\n    console.log(\"We have run the log in function \");\n  }\n\n  logout() {\n    console.log(\"Logging out...\");\n    this.authenticated = false;\n  }\n\n  isAuthenticated() {\n    return this.authenticated;\n  }\n\n}\n\nexport default new Auth();","map":{"version":3,"sources":["/Users/mark/Desktop/School/Subjects/SENG350/spyBot/demoreactapp/client/src/components/auth.js"],"names":["axios","Auth","constructor","authenticated","username","password","setPassword","console","log","login","setState","post","state","then","res","data","error","err","localStorage","setItem","token","catch","logout","isAuthenticated"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,CAAU;AAENC,EAAAA,WAAW,GAAE;AAET,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,QAAL,GAAe,EAAf;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACH;;AAIDC,EAAAA,WAAW,CAACD,QAAD,EAAU;AACjBE,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqB,KAAKH,QAAtC;AACA,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAEU,QAALI,KAAK,CAACL,QAAD,EAAWC,QAAX,EAAoB;AAE3B,SAAKK,QAAL,CAAc;AAACN,MAAAA,QAAQ,EAAEA,QAAX;AAAqBC,MAAAA,QAAQ,EAAEA;AAA/B,KAAd;AAGAL,IAAAA,KAAK,CAACW,IAAN,CAAW,OAAX,EAAoB;AAAEP,MAAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWR,QAAvB;AAAiCC,MAAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWP;AAAtD,KAApB,EAAsFQ,IAAtF,CAA2FC,GAAG,IAAI;AAE9F,UAAGA,GAAG,CAACC,IAAJ,CAASC,KAAZ,EAAkB;AACd,aAAKN,QAAL,CAAc;AAACO,UAAAA,GAAG,EAAEH,GAAG,CAACC,IAAJ,CAASC;AAAf,SAAd,EAAqC,MAAM;AACvCT,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2B,KAAKI,KAAL,CAAWK,GAAlD;AACH,SAFD;AAGH,OAJD,MAIK;AACDC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,GAAG,CAACC,IAAJ,CAASK,KAAvC;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH;AAEJ,KAXD,EAWGO,KAXH,CAWSJ,GAAG,IAAI,CAEf,CAbD;AAcA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGQV,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACH;;AAGDc,EAAAA,MAAM,GAAE;AACJf,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAKL,aAAL,GAAqB,KAArB;AACH;;AAEDoB,EAAAA,eAAe,GAAE;AACb,WAAO,KAAKpB,aAAZ;AACH;;AArEK;;AAwEV,eAAe,IAAIF,IAAJ,EAAf","sourcesContent":["import axios from 'axios';\n\nclass Auth{\n\n    constructor(){\n\n        this.authenticated = false\n        this.username= \"\"\n        this.password = \"\"\n    }\n\n\n\n    setPassword(password){\n        console.log(\"Setpassword --- \" + this.password)\n        this.password = password\n    }\n\n    async login(username, password){\n\n        this.setState({username: username, password: password})\n\n\n        axios.post(\"login\", { username: this.state.username, password: this.state.password }).then(res => {\n            \n            if(res.data.error){\n                this.setState({err: res.data.error}, () => {\n                    console.log(\"There is an error --> \" + this.state.err);\n                })\n            }else{\n                localStorage.setItem(\"token\", res.data.token)\n                console.log(res);\n            }\n\n        }).catch(err => {\n            \n        })\n        /*\n        \n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({password : this.password})\n        };\n        try {\n            const response = await fetch('http://localhost:3002/login', requestOptions)\n            const data = await response.json()\n            if (data.outcome === 'match') {\n                this.authenticated = true\n            }\n            else if (data.outcome === 'no match') {\n\n                this.authenticated = false\n            }\n        }\n        catch (error) {\n            return (console.log(\"Error with the authentication : \" + error))\n        }\n        */\n\n        console.log(\"We have run the log in function \")\n    }\n\n\n    logout(){\n        console.log(\"Logging out...\")\n        this.authenticated = false\n    }\n\n    isAuthenticated(){\n        return this.authenticated\n    }\n}\n\nexport default new Auth();"]},"metadata":{},"sourceType":"module"}