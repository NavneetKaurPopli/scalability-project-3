{"ast":null,"code":"import axios from 'axios';\n\nclass Transaction {\n  constructor() {\n    this.init = () => {\n      this.token = localStorage.getItem(\"token\");\n      let headers = {\n        Accept: \"application/json\"\n      };\n\n      if (this.api_token) {\n        headers.Authorization = `Bearer ${this.token}`;\n      }\n\n      this.client = axios.create({\n        baseURL: this.api_url,\n        timeout: 31000,\n        headers: headers\n      });\n      return this.client;\n    };\n\n    this.getUserInfo = userid => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"accountinfo\", {\n          userid: userid\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"Get Balance \");\n      });\n    };\n\n    this.add = (userid, amount) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"add\", {\n          userid: userid,\n          amount: amount\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"Add amount \");\n      });\n    };\n\n    this.quote = (userid, stockSymbol) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"quote\", {\n          userid: userid,\n          stockSymbol: stockSymbol\n        }).then(res => {\n          console.log(res.data);\n          resolve({\n            data: res.data\n          });\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"Quoted \");\n      });\n    };\n\n    this.buy = (userid, stockSymbol, amount) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"buy\", {\n          userid: userid,\n          stockSymbol: stockSymbol,\n          amount: amount\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the add function \");\n      });\n    };\n\n    this.commitBuy = userid => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"commitbuy\", {\n          userid: userid\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the add function \");\n      });\n    };\n\n    this.cancelBuy = userid => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"cancelbuy\", {\n          userid: userid\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the add function \");\n      });\n    };\n\n    this.sell = (userid, stockSymbol, amount) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"sell\", {\n          userid: userid,\n          stockSymbol: stockSymbol,\n          amount: amount\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the add function \");\n      });\n    };\n\n    this.commitSell = userId => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"commitsell\", {\n          userId: userId\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err.data);\n          reject();\n        });\n        console.log(\"We have run the log in function \");\n      });\n    };\n\n    this.stockname = \"\";\n    this.userid = \"\";\n    this.token = \"\";\n    this.amount = \"\";\n    this.init = this.init.bind(this);\n    this.add = this.add.bind(this);\n    this.quote = this.quote.bind(this);\n    this.buy = this.buy.bind(this);\n  }\n\n}\n\nexport default new Transaction();","map":{"version":3,"sources":["/Users/mark/Desktop/Projects/StockTradingApp/StockTradingApp - Client/src/Helper/transaction.js"],"names":["axios","Transaction","constructor","init","token","localStorage","getItem","headers","Accept","api_token","Authorization","client","create","baseURL","api_url","timeout","getUserInfo","userid","Promise","resolve","reject","post","then","res","data","err","error","catch","console","log","add","amount","quote","stockSymbol","buy","commitBuy","cancelBuy","sell","commitSell","userId","stockname","bind"],"mappings":"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","sourcesContent":["\nimport axios from 'axios';\n\n\nclass Transaction{\n\n    constructor(){\n\n\n        this.stockname = \"\";\n        this.userid = \"\";\n        this.token = \"\";\n        this.amount = \"\";\n\n\n        this.init = this.init.bind(this)\n        this.add = this.add.bind(this)\n        this.quote = this.quote.bind(this)\n        this.buy = this.buy.bind(this)\n\n    }\n\n    init = () => {\n\n        this.token = localStorage.getItem(\"token\")\n\n        let headers = {\n            Accept: \"application/json\",\n        };\n\n        if (this.api_token) {\n            headers.Authorization = `Bearer ${this.token}`;\n        }\n\n        this.client = axios.create({\n            baseURL: this.api_url,\n            timeout: 31000,\n            headers: headers,\n        });\n\n        return this.client\n\n    }\n\n    getUserInfo = (userid) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"accountinfo\", { userid: userid }).then( res => {\n\n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n\n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"Get Balance \")\n\n        })\n        \n    }\n\n    add = (userid, amount) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"add\", { userid: userid, amount: amount }).then( res => {\n\n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"Add amount \")\n\n        })\n        \n    }\n\n    quote = (userid, stockSymbol) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"quote\", { userid: userid, stockSymbol: stockSymbol }).then( res => {\n\n                console.log(res.data)\n                resolve({data: res.data})\n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"Quoted \")\n\n        })\n        \n    }\n\n    buy = (userid, stockSymbol, amount) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"buy\", { userid: userid, stockSymbol: stockSymbol, amount: amount }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"We have run the add function \")\n\n        })\n        \n    }\n\n    commitBuy = (userid) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"commitbuy\", { userid: userid}).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"We have run the add function \")\n\n        })\n        \n    }\n\n    cancelBuy = (userid) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"cancelbuy\", { userid: userid }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n\n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"We have run the add function \")\n\n        })\n        \n    }\n\n    sell = (userid, stockSymbol, amount) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"sell\", { userid: userid, stockSymbol: stockSymbol, amount: amount }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"We have run the add function \")\n\n        })\n        \n    }\n\n    commitSell = (userId) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"commitsell\", { userId: userId }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err.data)\n                reject()\n            })\n    \n            console.log(\"We have run the log in function \")\n\n        })\n        \n    }\n\n    \n\n}\n\nexport default new Transaction();"]},"metadata":{},"sourceType":"module"}