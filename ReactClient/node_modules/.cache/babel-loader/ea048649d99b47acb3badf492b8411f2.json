{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Desktop/School/Subjects/SENG350/spyBot/demoreactapp/client/src/routes/Landing/landing.js\";\nimport React, { Component } from 'react';\nimport Navbar from '../../components/Navbar/navbar';\nimport Login from '../../components/Login/login';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Landing extends Component {\n  constructor() {\n    super();\n\n    this.callBackendAPI = async () => {\n      axios.get('index').then(res => {\n        console.log(\"Hiiiii\");\n\n        if (res.status !== 200) {\n          throw Error(res.message);\n        }\n\n        return res;\n      });\n    };\n\n    this.state = {\n      hasAccount: true\n    };\n  }\n\n  componentDidMount() {\n    this.callBackendAPI().then(res => this.setState({\n      data: res\n    })).catch(err => console.log(err));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  render() {\n    if (this.state.hasAccount) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"landing\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: \" This is the landing page \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Login, {\n          setToken: this.props.setToken()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Landing;","map":{"version":3,"sources":["/Users/mark/Desktop/School/Subjects/SENG350/spyBot/demoreactapp/client/src/routes/Landing/landing.js"],"names":["React","Component","Navbar","Login","Link","axios","Landing","constructor","callBackendAPI","get","then","res","console","log","status","Error","message","state","hasAccount","componentDidMount","setState","data","catch","err","render","props","setToken"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,MAAMC,OAAN,SAAsBL,SAAtB,CAA+B;AAE7BM,EAAAA,WAAW,GAAE;AACX;;AADW,SAgBXC,cAhBW,GAgBM,YAAY;AACzBH,MAAAA,KAAK,CAACI,GAAN,CAAU,OAAV,EAAmBC,IAAnB,CAAwBC,GAAG,IAAI;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,YAAIF,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACpB,gBAAMC,KAAK,CAACJ,GAAG,CAACK,OAAL,CAAX;AACH;;AACD,eAAOL,GAAP;AACH,OAND;AAQH,KAzBU;;AAGX,SAAKM,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAC;AADA,KAAb;AAGD;;AAECC,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,cAAL,GACGE,IADH,CACQC,GAAG,IAAI,KAAKS,QAAL,CAAc;AAAEC,MAAAA,IAAI,EAAEV;AAAR,KAAd,CADf,EAEGW,KAFH,CAESC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAFhB;AAGH,GAd0B,CAiB3B;;;AAYFC,EAAAA,MAAM,GAAG;AAEP,QAAG,KAAKP,KAAL,CAAWC,UAAd,EAAyB;AAEvB,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAK,KAAKO,KAAL,CAAWC,QAAX;AAApB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AASD;AAEF;;AA5C4B;;AA+C/B,eAAepB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from '../../components/Navbar/navbar'\nimport Login from '../../components/Login/login'\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\n\n\n\nclass Landing extends Component{\n\n  constructor(){\n    super();\n\n    this.state = {\n      hasAccount:true\n    } \n  }\n      \n    componentDidMount() {\n        this.callBackendAPI()\n          .then(res => this.setState({ data: res }))\n          .catch(err => console.log(err));\n    }\n  \n      \n    // fetching the GET route from the Express server which matches the GET route from server.js\n    callBackendAPI = async () => {\n        axios.get('index').then(res => {\n            console.log(\"Hiiiii\");\n            if (res.status !== 200) {\n                throw Error(res.message) \n            }\n            return res;\n        });\n\n    };\n  \n  render() {\n\n    if(this.state.hasAccount){\n      \n      return (\n        <div className=\"landing\">\n\n          <div className=\"\"> This is the landing page </div>\n\n          <Login setToken = { this.props.setToken() }/>\n\n        </div>\n    )\n    }\n    \n  }\n}\n\nexport default Landing;"]},"metadata":{},"sourceType":"module"}