{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Desktop/Projects/StockTradingApp/StockTradingApp - Client/src/Components/Order/order.js\";\nimport React, { Component } from 'react';\nimport transaction from '../../Helper/transaction'; //2 types of orders - triggered and market\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Order extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      if (event.target.value === \"triggered\") {\n        this.setState({\n          triggered: true\n        });\n      }\n\n      if (event.target.value === \"market\") {\n        this.setState({\n          triggered: false\n        });\n      }\n    };\n\n    this.buyOrSell = () => {\n      this.setState({\n        buttonClicked: true\n      });\n    };\n\n    this.makeOrder = event => {\n      event.preventDefault();\n      console.log(event.target.name);\n\n      if (this.props.ordertype === \"buy\") {\n        if (this.state.triggered) {\n          transaction.commitBuy();\n        } else {\n          transaction.buy();\n        }\n      } else if (this.props.ordertype === \"sell\") {\n        if (this.state.triggered) {\n          transaction.commitSell();\n        } else {\n          transaction.sell();\n        }\n      }\n    };\n\n    this.state = {\n      ordertype: \"\",\n      triggered: false,\n      buttonClicked: false\n    };\n  }\n\n  render() {\n    let button;\n    let confirmButtons;\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      name: this.props.ordertype,\n      type: \"submit\",\n      onClick: () => {\n        this.makeOrder();\n      },\n      children: [\"  \", this.state.triggered ? \"Set\" : \"\", \" \", this.props.ordertype, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 18\n    }, this);\n    confirmButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"commit\",\n        type: \"submit\",\n        onClick: () => {\n          this.makeOrder();\n        },\n        children: [\"Commit \", this.state.triggered ? \"Set\" : \"\", \" \", this.props.ordertype]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"cancel\",\n        type: \"submit\",\n        onClick: () => {\n          this.makeOrder();\n        },\n        children: [\"Cancel \", this.state.triggered ? \"Set\" : \"\", \" \", this.props.ordertype]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 26\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Order\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Place an order.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.props.ordertype\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.props.stockName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.props.stockCurrentPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"order type\",\n        id: \"ordertype\",\n        onChange: this.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"market\",\n          children: [\"Market \", this.props.ordertype]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"triggered\",\n          children: [\"Set \", this.props.ordertype, \" Trigger\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: () => {\n          this.makeOrder();\n        },\n        children: [this.props.ordertype, \" Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"amount\",\n          type: \"number\",\n          min: \"1\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), this.state.triggered && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [this.props.ordertype, \" Trigger:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"triggerVal\",\n            type: \"number\",\n            min: \"1\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), !this.state.buttonClicked ? button : confirmButtons]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/Users/mark/Desktop/Projects/StockTradingApp/StockTradingApp - Client/src/Components/Order/order.js"],"names":["React","Component","transaction","Order","constructor","handleChange","event","target","value","setState","triggered","buyOrSell","buttonClicked","makeOrder","preventDefault","console","log","name","props","ordertype","state","commitBuy","buy","commitSell","sell","render","button","confirmButtons","stockName","stockCurrentPrice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport transaction from '../../Helper/transaction';\n\n\n//2 types of orders - triggered and market\nclass Order extends Component {\n\n    constructor(){\n        super()\n\n        this.state = {\n            ordertype : \"\",\n            triggered : false,\n            buttonClicked : false,\n        }\n\n\n    }\n\n    handleChange = (event) => {\n\n        if(event.target.value === \"triggered\"){\n            this.setState({\n                triggered: true\n            })\n        }\n        if(event.target.value === \"market\"){\n            this.setState({\n                triggered: false\n            })\n        }\n    }\n\n    buyOrSell = () => {\n        this.setState({\n            buttonClicked : true\n        })\n\n    }\n  \n    //determine type of order and submit it\n    makeOrder = (event) => {\n\n        event.preventDefault()\n        console.log(event.target.name)\n        \n\n        if(this.props.ordertype === \"buy\"){\n            if(this.state.triggered){\n                transaction.commitBuy()\n            }\n            else{\n                transaction.buy()\n            }\n\n        }\n        else if(this.props.ordertype === \"sell\"){\n\n            if(this.state.triggered){\n                transaction.commitSell()\n            }\n            else{\n                transaction.sell()\n            }\n        }\n    }\n\n\n    render() {\n\n        let button;\n        let confirmButtons;\n\n        button = <button name = {this.props.ordertype} type = \"submit\" onClick={() => {this.makeOrder()}} >  {this.state.triggered ? \"Set\" : \"\"} {this.props.ordertype} </button>\n\n        confirmButtons = <div>\n                            <button name = \"commit\" type=\"submit\" onClick={() => {this.makeOrder()}} >Commit {this.state.triggered ? \"Set\" : \"\"} {this.props.ordertype}</button>\n                            <button name = \"cancel\" type=\"submit\" onClick={() => {this.makeOrder()}} >Cancel {this.state.triggered ? \"Set\" : \"\"} {this.props.ordertype}</button>\n                        </div>\n\n\n        return (\n            <div className=\"Order\">\n\n                <h2>Place an order.</h2>\n\n                <h3>{this.props.ordertype}</h3>\n\n                <h3>{this.props.stockName}</h3>\n\n                <h3>{this.props.stockCurrentPrice}</h3>\n\n                <select name=\"order type\" id=\"ordertype\" onChange={this.handleChange}>\n                    <option value=\"market\">Market {this.props.ordertype}</option>\n                    <option value=\"triggered\">Set {this.props.ordertype} Trigger</option>\n                </select>\n\n\n                <form onSubmit={() => {this.makeOrder()}}>\n\n                    {this.props.ordertype} Amount: \n                    \n                    <input name=\"amount\" type=\"number\" min=\"1\" onChange={this.handleChange}></input>\n                    \n                    <br/>\n\n                    {this.state.triggered && \n                        <div>\n                            {this.props.ordertype} Trigger: \n                            <input name=\"triggerVal\" type=\"number\" min=\"1\" onChange={this.handleChange}></input>\n                        </div>\n                    }\n\n                    {!this.state.buttonClicked ? button : confirmButtons}\n            \n                </form>\n\n            </div>\n        );\n       \n    }\n  }\n  \n  export default Order;"]},"metadata":{},"sourceType":"module"}