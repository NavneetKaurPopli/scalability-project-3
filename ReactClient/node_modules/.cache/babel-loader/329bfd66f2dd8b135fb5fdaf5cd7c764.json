{"ast":null,"code":"import axios from 'axios';\n\nclass Auth {\n  constructor() {\n    this.setPassword = password => {\n      console.log(\"Setpassword --- \" + this.password);\n      this.password = password;\n    };\n\n    this.login = (username, password) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"login\", {\n          username: username,\n          password: password\n        }).then(res => {\n          if (res.data.error) {\n            this.err = res.data.error;\n            resolve(res.data.error);\n          } else {\n            this.authenticated = true;\n            this.token = res.data.token;\n            this.user = res.data.user;\n            localStorage.setItem(\"token\", res.data.token);\n            console.log(res);\n            resolve(true);\n          }\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the log in function \");\n      }); //this.setState({username: username, password: password})\n    };\n\n    this.logout = () => {\n      console.log(\"Logging out...\");\n      this.authenticated = false;\n    };\n\n    this.isAuthenticated = () => {\n      return this.authenticated;\n    };\n\n    this.err = \"\";\n    this.authenticated = false;\n    this.token = \"\";\n    this.user = \"\";\n    this.login = this.login.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n    this.logout = this.logout.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n}\n\nexport default new Auth();","map":{"version":3,"sources":["/Users/mark/Desktop/School/Subjects/SENG350/spyBot/demoreactapp/client/src/components/auth.js"],"names":["axios","Auth","constructor","setPassword","password","console","log","login","username","Promise","resolve","reject","post","then","res","data","error","err","authenticated","token","user","localStorage","setItem","catch","logout","isAuthenticated","bind"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,IAAN,CAAU;AAENC,EAAAA,WAAW,GAAE;AAAA,SAkBbC,WAlBa,GAkBEC,QAAD,IAAc;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqB,KAAKF,QAAtC;AACA,WAAKA,QAAL,GAAgBA,QAAhB;AACH,KArBY;;AAAA,SAuBbG,KAvBa,GAuBL,CAACC,QAAD,EAAWJ,QAAX,KAAwB;AAE5B,aAAO,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCX,QAAAA,KAAK,CAACY,IAAN,CAAW,OAAX,EAAoB;AAAEJ,UAAAA,QAAQ,EAAEA,QAAZ;AAAsBJ,UAAAA,QAAQ,EAAEA;AAAhC,SAApB,EAAgES,IAAhE,CAAsEC,GAAG,IAAI;AAEzE,cAAGA,GAAG,CAACC,IAAJ,CAASC,KAAZ,EAAkB;AAEd,iBAAKC,GAAL,GAAWH,GAAG,CAACC,IAAJ,CAASC,KAApB;AACAN,YAAAA,OAAO,CAACI,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAP;AAEH,WALD,MAMI;AAEA,iBAAKE,aAAL,GAAqB,IAArB;AACA,iBAAKC,KAAL,GAAaL,GAAG,CAACC,IAAJ,CAASI,KAAtB;AACA,iBAAKC,IAAL,GAAYN,GAAG,CAACC,IAAJ,CAASK,IAArB;AACAC,YAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,GAAG,CAACC,IAAJ,CAASI,KAAvC;AAEAd,YAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACAJ,YAAAA,OAAO,CAAC,IAAD,CAAP;AAEH;AAEJ,SApBD,EAoBGa,KApBH,CAoBSN,GAAG,IAAI;AACZZ,UAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACAN,UAAAA,MAAM;AACT,SAvBD;AAyBAN,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AAEH,OA5BM,CAAP,CAF4B,CAgC5B;AAGH,KA1DY;;AAAA,SA6DbkB,MA7Da,GA6DJ,MAAM;AACXnB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WAAKY,aAAL,GAAqB,KAArB;AACH,KAhEY;;AAAA,SAkEbO,eAlEa,GAkEK,MAAM;AACpB,aAAO,KAAKP,aAAZ;AACH,KApEY;;AAGT,SAAKD,GAAL,GAAW,EAAX;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,EAAZ;AAGA,SAAKb,KAAL,GAAa,KAAKA,KAAL,CAAWmB,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKvB,WAAL,GAAmB,KAAKA,WAAL,CAAiBuB,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKF,MAAL,GAAc,KAAKA,MAAL,CAAYE,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKD,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AAEH;;AAhBK;;AAyEV,eAAe,IAAIzB,IAAJ,EAAf","sourcesContent":["\nimport axios from 'axios';\n\n\nclass Auth{\n\n    constructor(){\n\n\n        this.err = \"\";\n        this.authenticated = false;\n        this.token = \"\";\n        this.user = \"\";\n\n\n        this.login = this.login.bind(this)\n        this.setPassword = this.setPassword.bind(this)\n        this.logout = this.logout.bind(this)\n        this.isAuthenticated = this.isAuthenticated.bind(this)\n\n    }\n\n\n\n    setPassword = (password) => {\n        console.log(\"Setpassword --- \" + this.password)\n        this.password = password\n    }\n\n    login = (username, password) => {\n\n        return new Promise((resolve, reject) => {\n            axios.post(\"login\", { username: username, password: password }).then( res => {\n            \n                if(res.data.error){\n\n                    this.err = res.data.error\n                    resolve(res.data.error)\n    \n                }\n                else{\n    \n                    this.authenticated = true;\n                    this.token = res.data.token;\n                    this.user = res.data.user;\n                    localStorage.setItem(\"token\", res.data.token);\n                    \n                    console.log(res);\n                    resolve(true)\n\n                }\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"We have run the log in function \")\n\n        })\n\n        //this.setState({username: username, password: password})\n\n        \n    }\n\n\n    logout = () => {\n        console.log(\"Logging out...\")\n        this.authenticated = false\n    }\n\n    isAuthenticated = () => {\n        return this.authenticated\n    }\n}\n\nexport default new Auth();"]},"metadata":{},"sourceType":"module"}