{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Desktop/Projects/StockTradingApp/ReactClient/src/Components/Quote/quote.js\";\nimport React, { Component } from 'react';\nimport transaction from '../../Helper/transaction';\nimport Order from \"../Order/order\";\nimport './quote.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Quote extends Component {\n  constructor() {\n    super();\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (!this.state.stock) {\n        return;\n      }\n\n      transaction.quote(localStorage.getItem(\"userid\"), this.state.stock.toUpperCase()).then(res => {\n        console.log(res.data);\n\n        if (res.data.name === \"Error\" || res.error) {\n          this.setState({\n            error: JSON.stringify(res.data.message),\n            searchSuccessful: false\n          });\n        } //get stock name, price\n        else {\n          this.setState({\n            stock: res.data.stock,\n            stockprice: res.data.quote,\n            searchSuccessful: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      stock: \"\",\n      stockprice: \"\",\n      error: \"\",\n      searchSuccessful: false\n    };\n  }\n\n  render() {\n    if (this.state.searchSuccessful) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Quote\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"Quote-form\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Quote-header\",\n            children: \"Search for a stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Quote-input\",\n            name: \"stock\",\n            type: \"text\",\n            onChange: this.myChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Quote-btn\",\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), this.state.searchSuccessful && /*#__PURE__*/_jsxDEV(Order, {\n          ordertype: \"Buy\",\n          stockname: this.state.stock,\n          stockprice: this.state.stockprice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), !this.state.searchSuccessful && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"The search was not successful, try again\"\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default Quote;","map":{"version":3,"sources":["/Users/mark/Desktop/Projects/StockTradingApp/ReactClient/src/Components/Quote/quote.js"],"names":["React","Component","transaction","Order","Quote","constructor","myChangeHandler","event","nam","target","name","val","value","setState","handleSubmit","preventDefault","state","stock","quote","localStorage","getItem","toUpperCase","then","res","console","log","data","error","JSON","stringify","message","searchSuccessful","stockprice","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport transaction from '../../Helper/transaction';\nimport Order from \"../Order/order\"\nimport './quote.css'\n\nclass Quote extends Component {\n    \n    constructor(){\n        super()\n\n        this.state = {\n            stock: \"\",\n            stockprice: \"\",\n            error: \"\",\n            searchSuccessful: false\n        }\n    }\n\n\n\n    myChangeHandler = (event) => {\n\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n\n    }\n\n\n    handleSubmit = (event) => {\n\n        event.preventDefault();\n\n        if(!this.state.stock){\n            return\n        }\n\n        transaction.quote(localStorage.getItem(\"userid\"), this.state.stock.toUpperCase()).then((res) => {\n            console.log(res.data);\n\n            if(res.data.name === \"Error\" || res.error){\n                this.setState({\n                    error: JSON.stringify(res.data.message),\n                    searchSuccessful : false\n                })\n            }\n            //get stock name, price\n            else{\n                this.setState({\n                    stock: res.data.stock,\n                    stockprice: res.data.quote,\n                    searchSuccessful : true\n                })\n\n            }\n        });\n\n    }\n\n  \n  \n    render() {\n\n\n    if(this.state.searchSuccessful){\n        return (\n\n            <div className=\"Quote\">\n    \n                <form className=\"Quote-form\" onSubmit={this.handleSubmit}>\n    \n                    <h1 className=\"Quote-header\">Search for a stock</h1>\n    \n                    <input className=\"Quote-input\" name=\"stock\" type=\"text\" onChange={this.myChangeHandler}/>\n    \n                    <button className=\"Quote-btn\" type=\"submit\">Search</button>\n    \n                </form>\n    \n                {this.state.searchSuccessful && \n    \n                    <Order ordertype=\"Buy\" stockname={this.state.stock} stockprice={this.state.stockprice}/>\n    \n                }\n    \n                {!this.state.searchSuccessful && \n    \n                    <>The search was not successful, try again</>\n    \n                }\n    \n            </div>\n          );\n    }    \n      \n    }\n  }\n  \n  export default Quote;"]},"metadata":{},"sourceType":"module"}