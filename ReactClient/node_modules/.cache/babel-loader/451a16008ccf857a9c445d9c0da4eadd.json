{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Desktop/School/Subjects/SENG350/spyBot/demoreactapp/client/src/components/login.js\";\nimport React, { Component } from 'react';\nimport Signup from './signup';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: 'React POST Request Example'\n        })\n      };\n      const response = await fetch('/login', requestOptions);\n      const body = await response.json();\n      console.log(body);\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      }, () => {});\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  handleSubmit(event) {\n    console.log(\"The form has been submitted\");\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"vertical-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"signin-form\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            name: \"username\",\n            onChange: this.myChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            onChange: this.myChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/mark/Desktop/School/Subjects/SENG350/spyBot/demoreactapp/client/src/components/login.js"],"names":["React","Component","Signup","Link","Login","constructor","props","callBackendAPI","requestOptions","method","headers","body","JSON","stringify","title","response","fetch","json","console","log","status","Error","message","myChangeHandler","event","nam","target","name","val","value","setState","state","username","password","componentDidMount","then","res","data","express","catch","err","handleSubmit","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAIA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAE1BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAoBlBC,cApBkB,GAoBD,YAAY;AACzB,YAAMC,cAAc,GAAE;AAClBC,QAAAA,MAAM,EAAE,MADU;AAElBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFS;AAGlBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAf;AAHY,OAAtB;AAKA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAD,EAAWR,cAAX,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMI,QAAQ,CAACE,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AACA,UAAII,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACV,IAAI,CAACW,OAAN,CAAX;AACH;;AACD,aAAOX,IAAP;AACH,KAjCiB;;AAAA,SAyClBY,eAzCkB,GAyCCC,KAAD,IAAW;AAEzB,UAAIC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAvB;AACA,UAAIC,GAAG,GAAGJ,KAAK,CAACE,MAAN,CAAaG,KAAvB;AACA,WAAKC,QAAL,CAAc;AAAC,SAACL,GAAD,GAAOG;AAAR,OAAd,EAA4B,MAAM,CAEjC,CAFD;AAGH,KAhDiB;;AAGd,SAAKG,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAK3B,cAAL,GACG4B,IADH,CACQC,GAAG,IAAI,KAAKN,QAAL,CAAc;AAAEO,MAAAA,IAAI,EAAED,GAAG,CAACE;AAAZ,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAItB,OAAO,CAACC,GAAR,CAAYqB,GAAZ,CAFhB;AAGH,GAfyB,CAqB1B;;;AAgBAC,EAAAA,YAAY,CAACjB,KAAD,EAAO;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAK,IAAAA,KAAK,CAACkB,cAAN;AAEH;;AAYDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BAEQ;AAAK,QAAA,KAAK,EAAC,oBAAX;AAAA,+BAEI;AAAM,UAAA,EAAE,EAAC,aAAT;AAAuB,UAAA,QAAQ,EAAE,KAAKF,YAAtC;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,UAA/B;AAA0C,YAAA,IAAI,EAAC,UAA/C;AAA0D,YAAA,QAAQ,EAAE,KAAKlB;AAAzE;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,WAAW,EAAC,UAAnC;AAA8C,YAAA,IAAI,EAAC,UAAnD;AAA8D,YAAA,QAAQ,EAAE,KAAKA;AAA7E;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AArEyB;;AAwE5B,eAAenB,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Signup from './signup';\nimport { Link } from \"react-router-dom\";\n\n\n\nclass Login extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n        }\n    }\n\n    componentDidMount() {\n        this.callBackendAPI()\n          .then(res => this.setState({ data: res.express }))\n          .catch(err => console.log(err));\n    }\n\n    \n  \n      \n\n    // fetching the GET route from the Express server which matches the GET route from server.js\n    callBackendAPI = async () => {\n        const requestOptions ={\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title: 'React POST Request Example' })\n        }\n        const response = await fetch('/login', requestOptions);\n        const body = await response.json();\n        console.log(body);\n        if (response.status !== 200) {\n            throw Error(body.message) \n        }\n        return body;\n    };\n\n    handleSubmit(event){\n        console.log(\"The form has been submitted\");\n        event.preventDefault();\n\n    }\n\n    myChangeHandler = (event) => {\n\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val}, () => {\n            \n        });\n    }\n\n  \n    render() {\n      return (\n        <div className=\"login\">\n                \n                <div class=\"vertical-container\">\n\n                    <form id='signin-form' onSubmit={this.handleSubmit}>\n                        <h2>LOGIN</h2>\n                        <input type=\"text\" placeholder=\"Username\" name='username' onChange={this.myChangeHandler}></input>\n                        <input type=\"password\" placeholder=\"Password\" name='password' onChange={this.myChangeHandler}></input>\n                        <button type=\"submit\" >Sign In</button>\n                    </form>\n                </div>\n\n        </div>\n      );\n    }\n  }\n  \n  export default Login;"]},"metadata":{},"sourceType":"module"}