{"ast":null,"code":"import axios from 'axios';\n\nclass Transaction {\n  constructor() {\n    this.init = () => {\n      this.token = localStorage.getItem(\"token\");\n      let headers = {\n        Accept: \"application/json\"\n      };\n\n      if (this.api_token) {\n        headers.Authorization = `Bearer ${this.token}`;\n      }\n\n      this.client = axios.create({\n        baseURL: this.api_url,\n        timeout: 31000,\n        headers: headers\n      });\n      return this.client;\n    };\n\n    this.getUserInfo = userid => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"accountinfo\", {\n          userid: userid\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"Get Balance \");\n      });\n    };\n\n    this.add = (userid, amount) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"add\", {\n          userid: userid,\n          amount: amount\n        }).then(res => {\n          console.log(res);\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"Add amount \");\n      });\n    };\n\n    this.quote = (userid, stockSymbol) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"quote\", {\n          userid: userid,\n          stock: stockSymbol\n        }).then(res => {\n          console.log(res.data);\n          resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"Quoted \");\n      });\n    };\n\n    this.buy = (userid, stockSymbol, amount) => {\n      console.log(\"userid \" + userid + \" stocksymbol \" + stockSymbol + \" amount\" + amount);\n      return new Promise((resolve, reject) => {\n        axios.post(\"buy\", {\n          userid: userid,\n          stockSymbol: stockSymbol,\n          amount: amount\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.err\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the buy function \");\n      });\n    };\n\n    this.commitBuy = userid => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"commitbuy\", {\n          userid: userid\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the commit buy function \");\n      });\n    };\n\n    this.cancelBuy = userid => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"cancelbuy\", {\n          userid: userid\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the cancel buy function \");\n      });\n    };\n\n    this.sell = (userid, stockSymbol, amount) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"sell\", {\n          userid: userid,\n          stockSymbol: stockSymbol,\n          amount: amount\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the sell function \");\n      });\n    };\n\n    this.commitSell = userId => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"commitsell\", {\n          userId: userId\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err.data);\n          reject();\n        });\n        console.log(\"We have run the commit sell function \");\n      });\n    };\n\n    this.cancelSell = userId => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"cancelsell\", {\n          userId: userId\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err.data);\n          reject();\n        });\n        console.log(\"We have run the cancell sell function \");\n      });\n    };\n\n    this.setBuy = (userid, stockSymbol, amount, trigger) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"setBuyAmount\", {\n          userid: userid,\n          stockSymbol: stockSymbol,\n          amount: amount\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        axios.post(\"setBuyTrigger\", {\n          userid: userid,\n          stockSymbol: stockSymbol,\n          amount: amount\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the set buy function \");\n      });\n    };\n\n    this.setSell = (userid, stockSymbol, amount, trigger) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"setSellAmount\", {\n          userid: userid,\n          stockSymbol: stockSymbol,\n          amount: amount\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          }); //2nd post for the trigger\n\n          axios.post(\"setSellTrigger\", {\n            userid: userid,\n            stockSymbol: stockSymbol,\n            trigger: trigger\n          }).then(res => {\n            res.data.err ? resolve({\n              error: res.data.error\n            }) : resolve({\n              data: res.data\n            });\n          }).catch(err => {\n            console.log(err);\n            reject();\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the set sell function \");\n      });\n    };\n\n    this.cancelSetBuy = (userid, stockSymbol) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"cancelsetbuy\", {\n          userid: userid,\n          stockSymbol: stockSymbol\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the cancel set buy function \");\n      });\n    };\n\n    this.cancelSetSell = (userid, stockSymbol) => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"cancelsetsell\", {\n          userid: userid,\n          stockSymbol: stockSymbol\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the cancel set sell function \");\n      });\n    };\n\n    this.getStocks = userid => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"getstocks\", {\n          userid: userid\n        }).then(res => {\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          reject();\n        });\n        console.log(\"We have run the get stocks function \");\n      });\n    };\n\n    this.displaySummary = userId => {\n      return new Promise((resolve, reject) => {\n        axios.post(\"displaysummary\", {\n          userid: userId\n        }).then(res => {\n          console.log(res);\n          res.data.err ? resolve({\n            error: res.data.error\n          }) : resolve({\n            data: res.data\n          });\n        }).catch(err => {\n          console.log(err.data);\n          reject();\n        });\n        console.log(\"We have run the display summary function \");\n      });\n    };\n\n    this.stockname = \"\";\n    this.userid = \"\";\n    this.token = \"\";\n    this.amount = \"\";\n    this.init = this.init.bind(this);\n    this.add = this.add.bind(this);\n    this.quote = this.quote.bind(this);\n    this.buy = this.buy.bind(this);\n  }\n\n}\n\nexport default new Transaction();","map":{"version":3,"sources":["/Users/mark/Desktop/Projects/StockTradingApp/ReactClient/src/Helper/transaction.js"],"names":["axios","Transaction","constructor","init","token","localStorage","getItem","headers","Accept","api_token","Authorization","client","create","baseURL","api_url","timeout","getUserInfo","userid","Promise","resolve","reject","post","then","res","data","err","error","catch","console","log","add","amount","quote","stockSymbol","stock","buy","commitBuy","cancelBuy","sell","commitSell","userId","cancelSell","setBuy","trigger","setSell","cancelSetBuy","cancelSetSell","getStocks","displaySummary","stockname","bind"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n\nclass Transaction{\n\n    constructor(){\n\n\n        this.stockname = \"\";\n        this.userid = \"\";\n        this.token = \"\";\n        this.amount = \"\";\n\n\n        this.init = this.init.bind(this)\n        this.add = this.add.bind(this)\n        this.quote = this.quote.bind(this)\n        this.buy = this.buy.bind(this)\n\n    }\n\n    init = () => {\n\n        this.token = localStorage.getItem(\"token\")\n\n        let headers = {\n            Accept: \"application/json\",\n        };\n\n        if (this.api_token) {\n            headers.Authorization = `Bearer ${this.token}`;\n        }\n\n        this.client = axios.create({\n            baseURL: this.api_url,\n            timeout: 31000,\n            headers: headers,\n        });\n\n        return this.client\n\n    }\n\n    getUserInfo = (userid) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"accountinfo\", { userid: userid }).then( res => {\n\n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n\n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"Get Balance \")\n\n        })\n        \n    }\n\n    add = (userid, amount) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"add\", { userid: userid, amount: amount }).then( res => {\n                console.log(res)\n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"Add amount \")\n\n        })\n        \n    }\n\n    quote = (userid, stockSymbol) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"quote\", { userid: userid, stock: stockSymbol }).then( res => {\n\n                console.log(res.data)\n                resolve({data: res.data})\n    \n            }).catch(err => {\n\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"Quoted \")\n\n        })\n        \n    }\n\n    buy = (userid, stockSymbol, amount) => {\n\n        console.log(\"userid \" + userid + \" stocksymbol \" + stockSymbol  + \" amount\" + amount)\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"buy\", { userid: userid, stockSymbol: stockSymbol, amount: amount }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.err}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"We have run the buy function \")\n\n        })\n        \n    }\n\n    commitBuy = (userid) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"commitbuy\", { userid: userid}).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"We have run the commit buy function \")\n\n        })\n        \n    }\n\n    cancelBuy = (userid) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"cancelbuy\", { userid: userid }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n\n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"We have run the cancel buy function \")\n\n        })\n        \n    }\n\n    sell = (userid, stockSymbol, amount) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"sell\", { userid: userid, stockSymbol: stockSymbol, amount: amount }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"We have run the sell function \")\n\n        })\n        \n    }\n\n    commitSell = (userId) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"commitsell\", { userId: userId }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err.data)\n                reject()\n            })\n    \n            console.log(\"We have run the commit sell function \")\n\n        })\n        \n    }\n\n    cancelSell = (userId) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"cancelsell\", { userId: userId }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err.data)\n                reject()\n            })\n    \n            console.log(\"We have run the cancell sell function \")\n\n        })\n        \n    }\n\n    setBuy = (userid, stockSymbol, amount, trigger) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"setBuyAmount\", { userid: userid, stockSymbol: stockSymbol, amount: amount }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n\n            axios.post(\"setBuyTrigger\", { userid: userid, stockSymbol: stockSymbol, amount: amount }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"We have run the set buy function \")\n\n        })\n        \n    }\n\n    setSell = (userid, stockSymbol, amount, trigger) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"setSellAmount\", { userid: userid, stockSymbol: stockSymbol, amount: amount }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n\n                //2nd post for the trigger\n                axios.post(\"setSellTrigger\", { userid: userid, stockSymbol: stockSymbol, trigger: trigger }).then( res => {\n            \n                    res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n        \n                }).catch(err => {\n                    console.log(err)\n                    reject()\n                })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n    \n            console.log(\"We have run the set sell function \")\n\n        })\n        \n    }\n\n    cancelSetBuy = (userid, stockSymbol) => {\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"cancelsetbuy\", { userid: userid, stockSymbol: stockSymbol }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n\n    \n            console.log(\"We have run the cancel set buy function \")\n\n        })\n\n    }\n\n    cancelSetSell = (userid, stockSymbol) => {\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"cancelsetsell\", { userid: userid, stockSymbol: stockSymbol }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n            console.log(\"We have run the cancel set sell function \")\n\n        })\n        \n    }\n\n\n    getStocks = (userid) => {\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"getstocks\", { userid: userid }).then( res => {\n            \n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err)\n                reject()\n            })\n            console.log(\"We have run the get stocks function \")\n\n        })\n        \n    }\n\n\n    displaySummary = (userId) => {\n\n        return new Promise((resolve, reject) => {\n\n            axios.post(\"displaysummary\", { userid: userId }).then( res => {\n            \n                console.log(res)\n                res.data.err ? resolve({ error: res.data.error}) : resolve({ data: res.data })\n    \n            }).catch(err => {\n                console.log(err.data)\n                reject()\n            })\n    \n            console.log(\"We have run the display summary function \")\n\n        })\n        \n    }\n\n}\n\nexport default new Transaction();"]},"metadata":{},"sourceType":"module"}